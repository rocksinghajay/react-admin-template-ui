'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

exports.default = function (ComponentToWrap) {
  var _class, _temp;

  var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultConfig;

  return _temp = _class = function (_PureComponent) {
    _inherits(Provider, _PureComponent);

    function Provider(props) {
      _classCallCheck(this, Provider);

      var _this = _possibleConstructorReturn(this, (Provider.__proto__ || Object.getPrototypeOf(Provider)).call(this));

      var children = props.children,
          rest = _objectWithoutProperties(props, ['children']);
      // Initialize the store with initial state and props


      _this.store = _extends({}, config.initial, rest);
      _this.subscriptions = [];
      _this.subscribe = _this.subscribe.bind(_this);
      _this.dispatch = _this.dispatch.bind(_this);
      return _this;
    }
    // Define our context key


    _createClass(Provider, [{
      key: 'componentWillReceiveProps',
      value: function componentWillReceiveProps(newProps) {
        // If the component receives new props, merge them into
        // the store and notify subscribers
        this.dispatch(function (state) {
          return _extends({}, state, newProps);
        });
        this.forceUpdate();
      }
    }, {
      key: 'subscribe',
      value: function subscribe(connect) {
        var _this2 = this;

        var meta = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

        var subscription = {
          connect: connect,
          meta: meta
        };
        // Add the subscription
        this.subscriptions.push(subscription);
        // return an unsubscribe function
        return function () {
          _this2.subscriptions = _this2.subscriptions.filter(function (d) {
            return d !== subscription;
          });
        };
      }
    }, {
      key: 'dispatch',
      value: function dispatch(fn) {
        var meta = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

        // When we recieve a dispatch command, build a new version
        // of the store by calling the dispatch function

        // TODO: beforeDispatch
        var oldStore = this.store;
        var newStore = fn(oldStore);
        // TODO: middleware
        this.store = newStore;
        this.subscriptions.forEach(function (subscription) {
          var shouldNotify = true;
          if (subscription.meta.filter) {
            shouldNotify = subscription.meta.filter(oldStore, newStore, meta);
          }
          shouldNotify && subscription.connect();
        });
        this.forceUpdate();
      }
    }, {
      key: 'getChildContext',
      value: function getChildContext() {
        var _this3 = this;

        return {
          reactState: {
            getStore: function getStore() {
              return _this3.store;
            },
            subscribe: this.subscribe,
            dispatch: this.dispatch
          }
        };
      }
    }, {
      key: 'render',
      value: function render() {
        return _react2.default.createElement(
          ComponentToWrap,
          this.store,
          this.props.children
        );
      }
    }]);

    return Provider;
  }(_react.PureComponent), _class.childContextTypes = {
    reactState: _propTypes2.default.object.isRequired
  }, _temp;
};

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var defaultConfig = {
  initial: {}
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9Qcm92aWRlci5qcyJdLCJuYW1lcyI6WyJDb21wb25lbnRUb1dyYXAiLCJjb25maWciLCJkZWZhdWx0Q29uZmlnIiwicHJvcHMiLCJjaGlsZHJlbiIsInJlc3QiLCJzdG9yZSIsImluaXRpYWwiLCJzdWJzY3JpcHRpb25zIiwic3Vic2NyaWJlIiwiYmluZCIsImRpc3BhdGNoIiwibmV3UHJvcHMiLCJzdGF0ZSIsImZvcmNlVXBkYXRlIiwiY29ubmVjdCIsIm1ldGEiLCJzdWJzY3JpcHRpb24iLCJwdXNoIiwiZmlsdGVyIiwiZCIsImZuIiwib2xkU3RvcmUiLCJuZXdTdG9yZSIsImZvckVhY2giLCJzaG91bGROb3RpZnkiLCJyZWFjdFN0YXRlIiwiZ2V0U3RvcmUiLCJjaGlsZENvbnRleHRUeXBlcyIsIm9iamVjdCIsImlzUmVxdWlyZWQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7a0JBT2UsVUFBU0EsZUFBVCxFQUFrRDtBQUFBOztBQUFBLE1BQXhCQyxNQUF3Qix1RUFBZkMsYUFBZTs7QUFDL0Q7QUFBQTs7QUFLRSxzQkFBWUMsS0FBWixFQUFtQjtBQUFBOztBQUFBOztBQUFBLFVBR2ZDLFFBSGUsR0FLYkQsS0FMYSxDQUdmQyxRQUhlO0FBQUEsVUFJWkMsSUFKWSw0QkFLYkYsS0FMYTtBQU1qQjs7O0FBQ0EsWUFBS0csS0FBTCxnQkFDS0wsT0FBT00sT0FEWixFQUVLRixJQUZMO0FBSUEsWUFBS0csYUFBTCxHQUFxQixFQUFyQjtBQUNBLFlBQUtDLFNBQUwsR0FBaUIsTUFBS0EsU0FBTCxDQUFlQyxJQUFmLE9BQWpCO0FBQ0EsWUFBS0MsUUFBTCxHQUFnQixNQUFLQSxRQUFMLENBQWNELElBQWQsT0FBaEI7QUFiaUI7QUFjbEI7QUFsQkQ7OztBQURGO0FBQUE7QUFBQSxnREFvQjRCRSxRQXBCNUIsRUFvQnNDO0FBQ2xDO0FBQ0E7QUFDQSxhQUFLRCxRQUFMLENBQWM7QUFBQSw4QkFDVEUsS0FEUyxFQUVURCxRQUZTO0FBQUEsU0FBZDtBQUlBLGFBQUtFLFdBQUw7QUFDRDtBQTVCSDtBQUFBO0FBQUEsZ0NBNkJZQyxPQTdCWixFQTZCZ0M7QUFBQTs7QUFBQSxZQUFYQyxJQUFXLHVFQUFKLEVBQUk7O0FBQzVCLFlBQU1DLGVBQWU7QUFDbkJGLDBCQURtQjtBQUVuQkM7QUFGbUIsU0FBckI7QUFJQTtBQUNBLGFBQUtSLGFBQUwsQ0FBbUJVLElBQW5CLENBQXdCRCxZQUF4QjtBQUNBO0FBQ0EsZUFBTyxZQUFNO0FBQ1gsaUJBQUtULGFBQUwsR0FBcUIsT0FBS0EsYUFBTCxDQUFtQlcsTUFBbkIsQ0FBMEI7QUFBQSxtQkFBS0MsTUFBTUgsWUFBWDtBQUFBLFdBQTFCLENBQXJCO0FBQ0QsU0FGRDtBQUdEO0FBeENIO0FBQUE7QUFBQSwrQkF5Q1dJLEVBekNYLEVBeUMwQjtBQUFBLFlBQVhMLElBQVcsdUVBQUosRUFBSTs7QUFDdEI7QUFDQTs7QUFFQTtBQUNBLFlBQU1NLFdBQVcsS0FBS2hCLEtBQXRCO0FBQ0EsWUFBTWlCLFdBQVdGLEdBQUdDLFFBQUgsQ0FBakI7QUFDQTtBQUNBLGFBQUtoQixLQUFMLEdBQWFpQixRQUFiO0FBQ0EsYUFBS2YsYUFBTCxDQUFtQmdCLE9BQW5CLENBQTJCLHdCQUFnQjtBQUN6QyxjQUFJQyxlQUFlLElBQW5CO0FBQ0EsY0FBSVIsYUFBYUQsSUFBYixDQUFrQkcsTUFBdEIsRUFBOEI7QUFDNUJNLDJCQUFlUixhQUFhRCxJQUFiLENBQWtCRyxNQUFsQixDQUF5QkcsUUFBekIsRUFBbUNDLFFBQW5DLEVBQTZDUCxJQUE3QyxDQUFmO0FBQ0Q7QUFDRFMsMEJBQWdCUixhQUFhRixPQUFiLEVBQWhCO0FBQ0QsU0FORDtBQU9BLGFBQUtELFdBQUw7QUFDRDtBQTFESDtBQUFBO0FBQUEsd0NBMkRvQjtBQUFBOztBQUNoQixlQUFPO0FBQ0xZLHNCQUFZO0FBQ1ZDLHNCQUFVO0FBQUEscUJBQU0sT0FBS3JCLEtBQVg7QUFBQSxhQURBO0FBRVZHLHVCQUFXLEtBQUtBLFNBRk47QUFHVkUsc0JBQVUsS0FBS0E7QUFITDtBQURQLFNBQVA7QUFPRDtBQW5FSDtBQUFBO0FBQUEsK0JBb0VXO0FBQ1AsZUFDRTtBQUFDLHlCQUFEO0FBQXFCLGVBQUtMLEtBQTFCO0FBQ0csZUFBS0gsS0FBTCxDQUFXQztBQURkLFNBREY7QUFLRDtBQTFFSDs7QUFBQTtBQUFBLGtDQUVTd0IsaUJBRlQsR0FFNkI7QUFDekJGLGdCQUFZLG9CQUFVRyxNQUFWLENBQWlCQztBQURKLEdBRjdCO0FBNEVELEM7O0FBcEZEOzs7O0FBQ0E7Ozs7Ozs7Ozs7Ozs7O0FBRUEsSUFBTTVCLGdCQUFnQjtBQUNwQkssV0FBUztBQURXLENBQXRCIiwiZmlsZSI6IlByb3ZpZGVyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IFB1cmVDb21wb25lbnQgfSBmcm9tICdyZWFjdCdcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcydcblxuY29uc3QgZGVmYXVsdENvbmZpZyA9IHtcbiAgaW5pdGlhbDoge31cbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oQ29tcG9uZW50VG9XcmFwLCBjb25maWcgPSBkZWZhdWx0Q29uZmlnKSB7XG4gIHJldHVybiBjbGFzcyBQcm92aWRlciBleHRlbmRzIFB1cmVDb21wb25lbnQge1xuICAgIC8vIERlZmluZSBvdXIgY29udGV4dCBrZXlcbiAgICBzdGF0aWMgY2hpbGRDb250ZXh0VHlwZXMgPSB7XG4gICAgICByZWFjdFN0YXRlOiBQcm9wVHlwZXMub2JqZWN0LmlzUmVxdWlyZWRcbiAgICB9XG4gICAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICAgIHN1cGVyKClcbiAgICAgIGNvbnN0IHtcbiAgICAgICAgY2hpbGRyZW4sIC8vIGVzbGludC1kaXNhYmxlLWxpbmVcbiAgICAgICAgLi4ucmVzdFxuICAgICAgfSA9IHByb3BzXG4gICAgICAvLyBJbml0aWFsaXplIHRoZSBzdG9yZSB3aXRoIGluaXRpYWwgc3RhdGUgYW5kIHByb3BzXG4gICAgICB0aGlzLnN0b3JlID0ge1xuICAgICAgICAuLi5jb25maWcuaW5pdGlhbCxcbiAgICAgICAgLi4ucmVzdFxuICAgICAgfVxuICAgICAgdGhpcy5zdWJzY3JpcHRpb25zID0gW11cbiAgICAgIHRoaXMuc3Vic2NyaWJlID0gdGhpcy5zdWJzY3JpYmUuYmluZCh0aGlzKVxuICAgICAgdGhpcy5kaXNwYXRjaCA9IHRoaXMuZGlzcGF0Y2guYmluZCh0aGlzKVxuICAgIH1cbiAgICBjb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzKG5ld1Byb3BzKSB7XG4gICAgICAvLyBJZiB0aGUgY29tcG9uZW50IHJlY2VpdmVzIG5ldyBwcm9wcywgbWVyZ2UgdGhlbSBpbnRvXG4gICAgICAvLyB0aGUgc3RvcmUgYW5kIG5vdGlmeSBzdWJzY3JpYmVyc1xuICAgICAgdGhpcy5kaXNwYXRjaChzdGF0ZSA9PiAoe1xuICAgICAgICAuLi5zdGF0ZSxcbiAgICAgICAgLi4ubmV3UHJvcHNcbiAgICAgIH0pKVxuICAgICAgdGhpcy5mb3JjZVVwZGF0ZSgpXG4gICAgfVxuICAgIHN1YnNjcmliZShjb25uZWN0LCBtZXRhID0ge30pIHtcbiAgICAgIGNvbnN0IHN1YnNjcmlwdGlvbiA9IHtcbiAgICAgICAgY29ubmVjdCxcbiAgICAgICAgbWV0YVxuICAgICAgfVxuICAgICAgLy8gQWRkIHRoZSBzdWJzY3JpcHRpb25cbiAgICAgIHRoaXMuc3Vic2NyaXB0aW9ucy5wdXNoKHN1YnNjcmlwdGlvbilcbiAgICAgIC8vIHJldHVybiBhbiB1bnN1YnNjcmliZSBmdW5jdGlvblxuICAgICAgcmV0dXJuICgpID0+IHtcbiAgICAgICAgdGhpcy5zdWJzY3JpcHRpb25zID0gdGhpcy5zdWJzY3JpcHRpb25zLmZpbHRlcihkID0+IGQgIT09IHN1YnNjcmlwdGlvbilcbiAgICAgIH1cbiAgICB9XG4gICAgZGlzcGF0Y2goZm4sIG1ldGEgPSB7fSkge1xuICAgICAgLy8gV2hlbiB3ZSByZWNpZXZlIGEgZGlzcGF0Y2ggY29tbWFuZCwgYnVpbGQgYSBuZXcgdmVyc2lvblxuICAgICAgLy8gb2YgdGhlIHN0b3JlIGJ5IGNhbGxpbmcgdGhlIGRpc3BhdGNoIGZ1bmN0aW9uXG5cbiAgICAgIC8vIFRPRE86IGJlZm9yZURpc3BhdGNoXG4gICAgICBjb25zdCBvbGRTdG9yZSA9IHRoaXMuc3RvcmVcbiAgICAgIGNvbnN0IG5ld1N0b3JlID0gZm4ob2xkU3RvcmUpXG4gICAgICAvLyBUT0RPOiBtaWRkbGV3YXJlXG4gICAgICB0aGlzLnN0b3JlID0gbmV3U3RvcmVcbiAgICAgIHRoaXMuc3Vic2NyaXB0aW9ucy5mb3JFYWNoKHN1YnNjcmlwdGlvbiA9PiB7XG4gICAgICAgIGxldCBzaG91bGROb3RpZnkgPSB0cnVlXG4gICAgICAgIGlmIChzdWJzY3JpcHRpb24ubWV0YS5maWx0ZXIpIHtcbiAgICAgICAgICBzaG91bGROb3RpZnkgPSBzdWJzY3JpcHRpb24ubWV0YS5maWx0ZXIob2xkU3RvcmUsIG5ld1N0b3JlLCBtZXRhKVxuICAgICAgICB9XG4gICAgICAgIHNob3VsZE5vdGlmeSAmJiBzdWJzY3JpcHRpb24uY29ubmVjdCgpXG4gICAgICB9KVxuICAgICAgdGhpcy5mb3JjZVVwZGF0ZSgpXG4gICAgfVxuICAgIGdldENoaWxkQ29udGV4dCgpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHJlYWN0U3RhdGU6IHtcbiAgICAgICAgICBnZXRTdG9yZTogKCkgPT4gdGhpcy5zdG9yZSxcbiAgICAgICAgICBzdWJzY3JpYmU6IHRoaXMuc3Vic2NyaWJlLFxuICAgICAgICAgIGRpc3BhdGNoOiB0aGlzLmRpc3BhdGNoXG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gICAgcmVuZGVyKCkge1xuICAgICAgcmV0dXJuIChcbiAgICAgICAgPENvbXBvbmVudFRvV3JhcCB7Li4udGhpcy5zdG9yZX0+XG4gICAgICAgICAge3RoaXMucHJvcHMuY2hpbGRyZW59XG4gICAgICAgIDwvQ29tcG9uZW50VG9XcmFwPlxuICAgICAgKVxuICAgIH1cbiAgfVxufVxuIl19