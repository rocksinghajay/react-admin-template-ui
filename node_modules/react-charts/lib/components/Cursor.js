'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactState = require('react-state');

var _reactMove = require('react-move');

var _Selectors = require('../utils/Selectors');

var _Selectors2 = _interopRequireDefault(_Selectors);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
//


var Cursor = function (_PureComponent) {
  _inherits(Cursor, _PureComponent);

  function Cursor() {
    _classCallCheck(this, Cursor);

    var _this = _possibleConstructorReturn(this, (Cursor.__proto__ || Object.getPrototypeOf(Cursor)).call(this));

    _this.onHover = _this.onHover.bind(_this);
    _this.onActivate = _this.onActivate.bind(_this);
    return _this;
  }

  _createClass(Cursor, [{
    key: 'render',
    value: function render() {
      var _this2 = this;

      var _props = this.props,
          primary = _props.primary,
          snap = _props.snap,
          stackData = _props.stackData,
          primaryAxis = _props.primaryAxis,
          secondaryAxis = _props.secondaryAxis,
          cursor = _props.cursor,
          _props$offset = _props.offset,
          left = _props$offset.left,
          top = _props$offset.top,
          gridX = _props.gridX,
          gridY = _props.gridY,
          children = _props.children;

      // Don't render until we have all dependencies

      if (!stackData || !cursor || !primaryAxis || !secondaryAxis) {
        return null;
      }

      var x = cursor.x;
      var y = cursor.y;
      var animated = false;

      var axis = primary ? primaryAxis : secondaryAxis;
      var siblingAxis = primary ? secondaryAxis : primaryAxis;
      var siblingRange = siblingAxis.scale.range();

      var invert = axis.scale.invert || function (d) {
        return d;
      };

      var x1 = void 0,
          x2 = void 0,
          y1 = void 0,
          y2 = void 0,
          label = void 0,
          alignPctX = void 0,
          alignPctY = void 0;

      if (primary && (axis.type === 'ordinal' || snap)) {
        animated = true;
        var closestDatum = { focus: {} };
        if (primaryAxis.vertical) {
          var smallestDistance = 10000000;
          stackData.forEach(function (series) {
            series.data.forEach(function (datum) {
              var distance = Math.abs(y - datum.focus.x);
              if (distance < smallestDistance) {
                smallestDistance = distance;
                closestDatum = datum;
              }
            });
          });
          y = closestDatum.focus.x;
          label = typeof closestDatum.primary !== 'undefined' ? axis.format(closestDatum.primary) : undefined;
        } else {
          var _smallestDistance = 10000000;
          stackData.forEach(function (series) {
            series.data.forEach(function (datum) {
              var distance = Math.abs(x - datum.focus.x);
              if (distance < _smallestDistance) {
                _smallestDistance = distance;
                closestDatum = datum;
              }
            });
          });
          x = closestDatum.focus.x;
          label = typeof closestDatum.primary !== 'undefined' ? axis.format(closestDatum.primary) : undefined;
        }
      }

      if (axis.vertical) {
        x1 = siblingRange[0];
        x2 = siblingRange[1];
        y1 = y - 1;
        y2 = y + 1;
        label = typeof label !== 'undefined' ? label : axis.format(invert(cursor.y));
        if (axis.position === 'left') {
          alignPctX = -100;
          alignPctY = -50;
        } else {
          alignPctX = 0;
          alignPctY = -50;
        }
      } else {
        x1 = x - 1;
        x2 = x + 1;
        y1 = siblingRange[0];
        y2 = siblingRange[1];
        label = typeof label !== 'undefined' ? label : axis.format(invert(cursor.x));
        if (axis.position === 'top') {
          alignPctX = -500;
          alignPctY = -100;
        } else {
          alignPctX = -50;
          alignPctY = 0;
        }
      }

      var xStart = Math.min(x1, x2);
      var yStart = Math.min(y1, y2);
      var xEnd = Math.max(x1, x2);
      var yEnd = Math.max(y1, y2);

      var height = Math.max(yEnd - yStart, 0);
      var width = Math.max(xEnd - xStart, 0);

      return _react2.default.createElement(
        _reactMove.Animate,
        {
          data: {
            xStart: xStart,
            yStart: yStart,
            width: width,
            height: height,
            x1: x1,
            y1: y1,
            visibility: cursor.active ? 1 : 0
          },
          duration: 400
        },
        function (inter) {
          return _react2.default.createElement(
            'div',
            {
              className: 'Cursor',
              onMouseLeave: function onMouseLeave(e) {
                return _this2.onHover(null, e);
              },
              style: {
                pointerEvents: 'none',
                position: 'absolute',
                left: left + gridX + 'px',
                top: top + gridY + 'px',
                opacity: inter.visibility
              }
            },
            JSON.stringify(cursor, null, 2),
            _react2.default.createElement('div', {
              style: {
                position: 'absolute',
                transform: 'translate3d(' + (animated ? inter.xStart : xStart) + 'px, ' + (animated ? inter.yStart : yStart) + 'px, 0px)',
                width: (animated ? inter.width : width) + 'px',
                height: (animated ? inter.height : height) + 'px',
                background: 'rgba(0,0,0,.3)',
                WebkitBackfaceVisibility: 'hidden'
              }
            }),
            _react2.default.createElement(
              'div',
              {
                style: {
                  position: 'absolute',
                  transform: 'translate3d(' + (animated ? inter.x1 : x1) + 'px, ' + (animated ? inter.y1 : y1) + 'px, 0px)'
                }
              },
              _react2.default.createElement(
                'div',
                {
                  style: {
                    padding: '5px',
                    fontSize: '10px',
                    background: 'rgba(0,0,0,.6)',
                    color: 'white',
                    borderRadius: '3px',
                    position: 'relative',
                    transform: 'translate3d(' + alignPctX + '%, ' + alignPctY + '%, 0px)',
                    whiteSpace: !axis.vertical && 'nowrap'
                  }
                },
                children({
                  label: label
                })
              )
            )
          );
        }
      );
    }
  }, {
    key: 'onHover',
    value: function onHover(hovered, e) {
      return this.props.dispatch(function (state) {
        return _extends({}, state, {
          hovered: hovered
        });
      }, {
        type: 'hovered'
      });
    }
  }, {
    key: 'onActivate',
    value: function onActivate(newActive, e) {
      var _props2 = this.props,
          active = _props2.active,
          dispatch = _props2.dispatch;

      if (active === newActive) {
        return dispatch(function (state) {
          return _extends({}, state, {
            active: null
          });
        }, {
          type: 'active'
        });
      }
      dispatch(function (state) {
        return _extends({}, state, {
          active: newActive
        });
      }, {
        type: 'active'
      });
    }
  }]);

  return Cursor;
}(_react.PureComponent);

Cursor.defaultProps = {
  children: function children(_ref) {
    var label = _ref.label;
    return _react2.default.createElement(
      'span',
      null,
      label
    );
  }
};
exports.default = (0, _reactState.Connect)(function () {
  var selectors = {
    primaryAxis: _Selectors2.default.primaryAxis(),
    secondaryAxis: _Selectors2.default.secondaryAxis(),
    offset: _Selectors2.default.offset(),
    gridX: _Selectors2.default.gridX(),
    gridY: _Selectors2.default.gridY()
  };
  return function (state) {
    return {
      stackData: state.stackData,
      primaryAxis: selectors.primaryAxis(state),
      secondaryAxis: selectors.secondaryAxis(state),
      cursor: state.cursor,
      offset: selectors.offset(state),
      gridX: selectors.gridX(state),
      gridY: selectors.gridY(state)
    };
  };
}, {
  statics: {
    isHTML: true
  }
})(Cursor);

/* <g

  >

  <Rectangle
    x1={labelX1}
    x2={labelX2}
    y1={labelY1}
    y2={labelY2}
  />
  <Text
    x={x1}
    y={y1}
    fontSize={fontSize}
    textAnchor={axis.position === 'left' ? 'end' : axis.position === 'right' ? 'start' : 'middle'}
    dominantBaseline={axis.position === 'top' ? 'alphabetic' : axis.position === 'bottom' ? 'hanging' : 'central'}
  >
    {label}
  </Text>
</g> */
//# sourceMappingURL=data:application/json;base64,