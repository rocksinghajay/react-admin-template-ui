'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

exports.hoverSeries = hoverSeries;
exports.hoverDatum = hoverDatum;
exports.selectSeries = selectSeries;
exports.selectDatum = selectDatum;
function hoverSeries(series) {
  this.props.dispatch(function (state) {
    return _extends({}, state, {
      hovered: series ? {
        active: true,
        series: series,
        datums: null,
        single: false
      } : _extends({}, state.hovered, {
        active: false
      })
    });
  }, {
    type: 'hoverSeries'
  });
}

function hoverDatum(datum) {
  this.props.dispatch(function (state) {
    return _extends({}, state, {
      hovered: datum ? {
        active: true,
        series: null,
        datums: [datum],
        single: true
      } : _extends({}, state.hovered, {
        active: false
      })
    });
  }, {
    type: 'hoverDatum'
  });
}

function selectSeries(series) {
  this.props.dispatch(function (state) {
    return _extends({}, state, {
      selected: series ? {
        active: true,
        series: series,
        datums: null,
        single: false
      } : {
        active: false
      }
    });
  }, {
    type: 'selectSeries'
  });
}

function selectDatum(datum) {
  this.props.dispatch(function (state) {
    return _extends({}, state, {
      selected: datum ? {
        active: true,
        series: null,
        datums: [datum],
        single: true
      } : {
        active: false
      }
    });
  }, {
    type: 'selectDatum'
  });
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy91dGlscy9pbnRlcmFjdGlvbk1ldGhvZHMuanMiXSwibmFtZXMiOlsiaG92ZXJTZXJpZXMiLCJob3ZlckRhdHVtIiwic2VsZWN0U2VyaWVzIiwic2VsZWN0RGF0dW0iLCJzZXJpZXMiLCJwcm9wcyIsImRpc3BhdGNoIiwic3RhdGUiLCJob3ZlcmVkIiwiYWN0aXZlIiwiZGF0dW1zIiwic2luZ2xlIiwidHlwZSIsImRhdHVtIiwic2VsZWN0ZWQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7O1FBQWdCQSxXLEdBQUFBLFc7UUFpQkFDLFUsR0FBQUEsVTtRQWlCQUMsWSxHQUFBQSxZO1FBZ0JBQyxXLEdBQUFBLFc7QUFsRFQsU0FBU0gsV0FBVCxDQUFzQkksTUFBdEIsRUFBOEI7QUFDbkMsT0FBS0MsS0FBTCxDQUFXQyxRQUFYLENBQW9CO0FBQUEsd0JBQ2ZDLEtBRGU7QUFFbEJDLGVBQVNKLFNBQVM7QUFDaEJLLGdCQUFRLElBRFE7QUFFaEJMLHNCQUZnQjtBQUdoQk0sZ0JBQVEsSUFIUTtBQUloQkMsZ0JBQVE7QUFKUSxPQUFULGdCQU1KSixNQUFNQyxPQU5GO0FBT1BDLGdCQUFRO0FBUEQ7QUFGUztBQUFBLEdBQXBCLEVBV0k7QUFDRkcsVUFBTTtBQURKLEdBWEo7QUFjRDs7QUFFTSxTQUFTWCxVQUFULENBQXFCWSxLQUFyQixFQUE0QjtBQUNqQyxPQUFLUixLQUFMLENBQVdDLFFBQVgsQ0FBb0I7QUFBQSx3QkFDZkMsS0FEZTtBQUVsQkMsZUFBU0ssUUFBUTtBQUNmSixnQkFBUSxJQURPO0FBRWZMLGdCQUFRLElBRk87QUFHZk0sZ0JBQVEsQ0FBQ0csS0FBRCxDQUhPO0FBSWZGLGdCQUFRO0FBSk8sT0FBUixnQkFNSkosTUFBTUMsT0FORjtBQU9QQyxnQkFBUTtBQVBEO0FBRlM7QUFBQSxHQUFwQixFQVdJO0FBQ0ZHLFVBQU07QUFESixHQVhKO0FBY0Q7O0FBRU0sU0FBU1YsWUFBVCxDQUF1QkUsTUFBdkIsRUFBK0I7QUFDcEMsT0FBS0MsS0FBTCxDQUFXQyxRQUFYLENBQW9CO0FBQUEsd0JBQ2ZDLEtBRGU7QUFFbEJPLGdCQUFVVixTQUFTO0FBQ2pCSyxnQkFBUSxJQURTO0FBRWpCTCxzQkFGaUI7QUFHakJNLGdCQUFRLElBSFM7QUFJakJDLGdCQUFRO0FBSlMsT0FBVCxHQUtOO0FBQ0ZGLGdCQUFRO0FBRE47QUFQYztBQUFBLEdBQXBCLEVBVUk7QUFDRkcsVUFBTTtBQURKLEdBVko7QUFhRDs7QUFFTSxTQUFTVCxXQUFULENBQXNCVSxLQUF0QixFQUE2QjtBQUNsQyxPQUFLUixLQUFMLENBQVdDLFFBQVgsQ0FBb0I7QUFBQSx3QkFDZkMsS0FEZTtBQUVsQk8sZ0JBQVVELFFBQVE7QUFDaEJKLGdCQUFRLElBRFE7QUFFaEJMLGdCQUFRLElBRlE7QUFHaEJNLGdCQUFRLENBQUNHLEtBQUQsQ0FIUTtBQUloQkYsZ0JBQVE7QUFKUSxPQUFSLEdBS047QUFDRkYsZ0JBQVE7QUFETjtBQVBjO0FBQUEsR0FBcEIsRUFVSTtBQUNGRyxVQUFNO0FBREosR0FWSjtBQWFEIiwiZmlsZSI6ImludGVyYWN0aW9uTWV0aG9kcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBmdW5jdGlvbiBob3ZlclNlcmllcyAoc2VyaWVzKSB7XG4gIHRoaXMucHJvcHMuZGlzcGF0Y2goc3RhdGUgPT4gKHtcbiAgICAuLi5zdGF0ZSxcbiAgICBob3ZlcmVkOiBzZXJpZXMgPyB7XG4gICAgICBhY3RpdmU6IHRydWUsXG4gICAgICBzZXJpZXMsXG4gICAgICBkYXR1bXM6IG51bGwsXG4gICAgICBzaW5nbGU6IGZhbHNlXG4gICAgfSA6IHtcbiAgICAgIC4uLnN0YXRlLmhvdmVyZWQsXG4gICAgICBhY3RpdmU6IGZhbHNlXG4gICAgfVxuICB9KSwge1xuICAgIHR5cGU6ICdob3ZlclNlcmllcydcbiAgfSlcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGhvdmVyRGF0dW0gKGRhdHVtKSB7XG4gIHRoaXMucHJvcHMuZGlzcGF0Y2goc3RhdGUgPT4gKHtcbiAgICAuLi5zdGF0ZSxcbiAgICBob3ZlcmVkOiBkYXR1bSA/IHtcbiAgICAgIGFjdGl2ZTogdHJ1ZSxcbiAgICAgIHNlcmllczogbnVsbCxcbiAgICAgIGRhdHVtczogW2RhdHVtXSxcbiAgICAgIHNpbmdsZTogdHJ1ZVxuICAgIH0gOiB7XG4gICAgICAuLi5zdGF0ZS5ob3ZlcmVkLFxuICAgICAgYWN0aXZlOiBmYWxzZVxuICAgIH1cbiAgfSksIHtcbiAgICB0eXBlOiAnaG92ZXJEYXR1bSdcbiAgfSlcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHNlbGVjdFNlcmllcyAoc2VyaWVzKSB7XG4gIHRoaXMucHJvcHMuZGlzcGF0Y2goc3RhdGUgPT4gKHtcbiAgICAuLi5zdGF0ZSxcbiAgICBzZWxlY3RlZDogc2VyaWVzID8ge1xuICAgICAgYWN0aXZlOiB0cnVlLFxuICAgICAgc2VyaWVzLFxuICAgICAgZGF0dW1zOiBudWxsLFxuICAgICAgc2luZ2xlOiBmYWxzZVxuICAgIH0gOiB7XG4gICAgICBhY3RpdmU6IGZhbHNlXG4gICAgfVxuICB9KSwge1xuICAgIHR5cGU6ICdzZWxlY3RTZXJpZXMnXG4gIH0pXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBzZWxlY3REYXR1bSAoZGF0dW0pIHtcbiAgdGhpcy5wcm9wcy5kaXNwYXRjaChzdGF0ZSA9PiAoe1xuICAgIC4uLnN0YXRlLFxuICAgIHNlbGVjdGVkOiBkYXR1bSA/IHtcbiAgICAgIGFjdGl2ZTogdHJ1ZSxcbiAgICAgIHNlcmllczogbnVsbCxcbiAgICAgIGRhdHVtczogW2RhdHVtXSxcbiAgICAgIHNpbmdsZTogdHJ1ZVxuICAgIH0gOiB7XG4gICAgICBhY3RpdmU6IGZhbHNlXG4gICAgfVxuICB9KSwge1xuICAgIHR5cGU6ICdzZWxlY3REYXR1bSdcbiAgfSlcbn1cbiJdfQ==